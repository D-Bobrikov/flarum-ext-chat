{"version":3,"sources":["webpack://module.exports/webpack/bootstrap","webpack://module.exports/./forum.js","webpack://module.exports/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://module.exports/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://module.exports/./src/forum/components/ChatFrame.js","webpack://module.exports/./src/forum/components/ChatMessage.js","webpack://module.exports/./src/forum/components/ChatPreview.js","webpack://module.exports/./src/forum/index.js","webpack://module.exports/external \"flarum.core.compat['Component']\"","webpack://module.exports/external \"flarum.core.compat['components/Button']\"","webpack://module.exports/external \"flarum.core.compat['components/Dropdown']\"","webpack://module.exports/external \"flarum.core.compat['components/HeaderPrimary']\"","webpack://module.exports/external \"flarum.core.compat['components/LoadingIndicator']\"","webpack://module.exports/external \"flarum.core.compat['components/Separator']\"","webpack://module.exports/external \"flarum.core.compat['extend']\"","webpack://module.exports/external \"flarum.core.compat['helpers/avatar']\"","webpack://module.exports/external \"flarum.core.compat['helpers/fullTime']\"","webpack://module.exports/external \"flarum.core.compat['helpers/username']\"","webpack://module.exports/external \"flarum.core.compat['utils/extractText']\"","webpack://module.exports/external \"flarum.core.compat['utils/humanTime']\""],"names":["refAudioNotification","refAudio","Audio","src","volume","audioNotification","audio","ChatFrame","config","isInitialized","context","input","getChatInput","baseScrollHeight","scrollHeight","baseHeight","init","beingShown","localStorage","getItem","beingShownChatsList","isMuted","notify","transform","charLimit","app","forum","attribute","loading","scroll","autoScroll","oldScroll","loadingFetch","needToScroll","JSON","parse","x","y","messageCharLimit","messages","components","instances","permissions","moderate","messageLength","rows","preview","session","user","placeholder","translator","trans","post","edit","vision","Notification","requestPermission","setInterval","m","redraw","document","addEventListener","chatMoveListener","bind","window","active","pusher","then","channel","pusherChannel","pusherAttach","alert","apiFetch","channels","name","callback","pusherChannels","data","actorId","id","push","createMessage","attributes","msg","undefined","hide","invoker","messageDelete","messageRestore","map","main","pusherDetach","unbind","getChat","querySelector","getChatHeader","getChatWrapper","getChatsList","toggleChat","e","chat","classes","className","showing","classList","contains","remove","add","setItem","stringify","toggleChatsList","chatLists","toggleSound","preventDefault","stopPropagation","toggleNotifications","insertMention","message","value","username","focus","strategy","reachedLimit","oldReached","configScroll","scrollTop","disableAutoScroll","el","target","offsetHeight","currentHeight","scrollToBottom","messageEditing","Object","values","chatWrapper","timeout","clearTimeout","setTimeout","top","behavior","view","concat","writing","component","inputPressEnter","inputProcess","messageEditEnd","inputPressButton","display","event","chatMoveStart","chatMoving","chatMoveEnd","mouseMoveEvent","chatMoveProcess","moveLast","clientX","clientY","body","removeEventListener","parseInt","style","right","move","wrapperHeight","nextMove","innerWidth","offsetWidth","innerHeight","height","chatOnResize","length","Math","ceil","console","log","inputPreviewStart","inputPreviewEnd","textFormatted","textFormat","instance","timedRedraw","keyCode","shiftKey","messageSend","inputClear","is_editing","instanceGetter","text","trim","created_at","Date","flash","editingMsg","apiPost","messageEdit","chatInput","deleted_by","elementWrapper","messageIds","keys","some","index","array","splice","messageResend","result","timedOut","needToFlash","options","chatMessage","ChatMessage","actor","chatFrame","userResolved","messageUserResolved","notifyTry","messageIsMention","indexOf","notifySend","avatarUrl","notifySound","title","icon","silent","sound","currentTime","play","targetInstance","request","method","url","error","lastMessageId","self","response","fetchedMessages","redrawTimeout","onunload","Component","inited","labels","props","store","getById","find","initEvents","initLabels","join","configWrapper","route","avatar","children","fullTime","humanTime","label","condition","deleted_forever","editDropDown","editDropDownTimedOut","censored","configFormat","labelBind","edited_at","extractText","ago","user_deleted_by","restore","element","s9e","TextFormatter","$","each","eval","call","forever","apiDelete","apiEdit","newContent","outside","flashItem","$item","addClass","one","removeClass","ChatPreview","initializers","extend","HeaderPrimary","prototype","items"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./forum.js\");\n","export * from './src/forum';\r\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","import Component from 'flarum/Component';\r\nimport LoadingIndicator from 'flarum/components/LoadingIndicator';\r\nimport ChatMessage from './ChatMessage';\r\nimport ChatPreview from './ChatPreview';\r\n\r\nconst refAudioNotification = \"data:audio/ogg;base64,\"\r\nvar refAudio = new Audio();\r\nrefAudio.src = refAudioNotification;\r\nrefAudio.volume = 0.5;\r\n\r\nconst audioNotification = \"data:audio/ogg;base64,\"\r\nvar audio = new Audio();\r\naudio.src = audioNotification;\r\naudio.volume = 0.5;\r\n\r\nexport default class ChatFrame extends Component\r\n{\r\n    config(isInitialized, context)\r\n    {\r\n        if(!isInitialized)\r\n        {\r\n            let input = this.getChatInput();\r\n            input.baseScrollHeight = input.scrollHeight;\r\n            input.baseHeight = 19;\r\n        }\r\n    }\r\n\r\n    init()\r\n    {\r\n        let beingShown = localStorage.getItem('chat_beingShown');\r\n        let beingShownChatsList = localStorage.getItem('chat_beingShownChatsList');\r\n        let isMuted = localStorage.getItem('chat_isMuted');\r\n        let notify = localStorage.getItem('chat_notify');\r\n        let transform = localStorage.getItem('chat_transform');\r\n        let charLimit = app.forum.attribute('pushedx-chat.settings.charlimit');\r\n\r\n        this.loading = false;\r\n        this.scroll = {autoScroll: true, oldScroll: 0, loadingFetch: false, needToScroll: true};\r\n        this.beingShown = beingShown === null ? !app.forum.attribute('pushedx-chat.settings.display.minimize') : JSON.parse(beingShown);\r\n        this.beingShownChatsList = beingShownChatsList === null ? 0 : JSON.parse(beingShownChatsList);\r\n        this.isMuted = isMuted === null ? false : JSON.parse(isMuted);\r\n        this.notify = notify === null ? false : JSON.parse(notify);\r\n        this.transform = transform === null ? {x: 0, y: 400} : JSON.parse(transform);\r\n        this.messageCharLimit = charLimit === null ? 512 : charLimit;\r\n        this.messages = {components: [], instances: {}};\r\n        this.permissions = {moderate: {}};\r\n        this.input = {messageLength: 0, rows: 1, preview: {}}\r\n\r\n        if(!app.session.user) this.input.placeholder = app.translator.trans('pushedx-chat.forum.errors.unauthenticated');\r\n        else\r\n        {\r\n            this.permissions.post = app.forum.attribute('pushedx-chat.permissions.chat');\r\n            this.permissions.edit = app.forum.attribute('pushedx-chat.permissions.edit');\r\n            this.permissions.delete = app.forum.attribute('pushedx-chat.permissions.delete');\r\n            this.permissions.moderate.delete = app.forum.attribute('pushedx-chat.permissions.moderate.delete');\r\n            this.permissions.moderate.vision = app.forum.attribute('pushedx-chat.permissions.moderate.vision');\r\n\r\n            this.input.placeholder = app.translator.trans(this.permissions.post ? 'pushedx-chat.forum.chat.placeholder' : 'pushedx-chat.forum.errors.chatdenied')\r\n        }\r\n\r\n        if(this.notify) Notification.requestPermission();\r\n\r\n\t\tsetInterval(() => m.redraw(), 30000);\r\n\r\n        document.addEventListener('mousedown', this.chatMoveListener.bind(this, 'mousedown'));\r\n        document.addEventListener('mouseup', this.chatMoveListener.bind(this, 'mouseup'));\r\n        window.addEventListener('blur', (() => this.active = false));\r\n        window.addEventListener('focus', (() => this.active = true));\r\n\r\n        if(!app.forum.attribute('pushedx-chat.settings.censor') || app.session.user)\r\n        {\r\n            if(app.pusher)\r\n            {\r\n                app.pusher.then(channel => \r\n                {\r\n                    this.pusherChannel = channel\r\n                    this.pusherAttach(channel)\r\n                });\r\n            }\r\n            else alert(\"Please enable Pusher/WebSocket to use Neon Chat!\");\r\n        }\r\n\r\n        this.apiFetch();\r\n    }\r\n\r\n    pusherAttach(channels)\r\n    {\r\n        function channel(name, callback) {\r\n            return {name: name, callback: callback};\r\n        };\r\n\r\n        this.pusherChannels = \r\n        [\r\n            channel('pushedx-chat.socket.event.post', data =>\r\n            {\r\n                if(!app.session.user || data.actorId != app.session.user.id())\r\n                {\r\n                    this.messages.components.push(this.createMessage(data, {}, true));\r\n                    this.scroll.needToScroll = true;\r\n                    m.redraw();\r\n                }\r\n            }),\r\n            channel('pushedx-chat.socket.event.edit', data =>\r\n            {\r\n                if(data.attributes.msg !== undefined)\r\n                {\r\n                    if(!app.session.user || data.actorId != app.session.user.id())\r\n                    {\r\n                        if(this.messages.instances[data.id])\r\n                            this.messages.instances[data.id].edit(data.attributes.msg, true);\r\n                    }\r\n                }\r\n                else if(data.attributes.hide !== undefined)\r\n                {\r\n                    if(!app.session.user || data.invoker != app.session.user.id())\r\n                        data.attributes.hide ? this.messageDelete(data) : this.messageRestore(data)\r\n                }\r\n            }),\r\n            channel('pushedx-chat.socket.event.delete', data =>\r\n            {\r\n                if(!app.session.user || data.actorId != app.session.user.id())\r\n                    this.messageDelete(data)\r\n            })  \r\n        ]\r\n\r\n        this.pusherChannels.map((channel) => channels.main.bind(channel.name, channel.callback));\r\n    }\r\n\r\n    pusherDetach(channels)\r\n    {\r\n        this.pusherChannels.map((channel) => channels.main.unbind(channel.name));\r\n    }\r\n\r\n    getChat()\r\n    {\r\n        return document.querySelector('.chat');\r\n    }\r\n\r\n    getChatHeader()\r\n    {\r\n        return document.querySelector('.chat #chat-header');\r\n    }\r\n    \r\n    getChatWrapper()\r\n    {\r\n        return document.querySelector('.chat .wrapper');\r\n    }\r\n\r\n    getChatInput()\r\n    {\r\n        return document.querySelector('.chat #chat-input');\r\n    }\r\n\r\n    getChatsList()\r\n    {\r\n        return document.querySelector('.chat #chats-list');\r\n    }\r\n\r\n    toggleChat(e)\r\n    {\r\n        var chat = this.getChat();\r\n        var classes = chat.className;\r\n        var showing = false;\r\n\r\n        if(chat.classList.contains('hidden'))\r\n        {\r\n            chat.classList.remove('hidden')\r\n            showing = true;\r\n        }\r\n        else chat.classList.add('hidden')\r\n\r\n        chat.className = classes;\r\n        this.beingShown = showing;\r\n        localStorage.setItem('chat_beingShown', JSON.stringify(showing));\r\n    }\r\n\r\n    toggleChatsList(e)\r\n    {\r\n        var chatLists = this.getChatsList();\r\n        var showing = true;\r\n\r\n        if(chatLists.classList.contains('toggled'))\r\n        {\r\n            chatLists.classList.remove('toggled')\r\n            showing = false;\r\n        }\r\n        else chatLists.classList.add('toggled')\r\n\r\n        this.beingShownChatsList = showing;\r\n        localStorage.setItem('chat_beingShownChatsList', JSON.stringify(showing));\r\n    }\r\n\r\n    toggleSound(e)\r\n    {\r\n        this.isMuted = !this.isMuted;\r\n        localStorage.setItem('chat_isMuted', JSON.stringify(this.isMuted));\r\n\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    toggleNotifications(e)\r\n    {\r\n        this.notify = !this.notify;\r\n        localStorage.setItem('chat_notify', JSON.stringify(this.notify));\r\n\r\n        if(this.notify) Notification.requestPermission();\r\n\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    insertMention(message)\r\n    {\r\n        let user = message.user;\r\n        if(!app.session.user) return;\r\n\r\n        var input = this.getChatInput();\r\n        input.value = input.value + \" @\" + user.username() + \" \";\r\n        input.focus();\r\n\r\n        m.redraw.strategy('none');\r\n    }\r\n\r\n    reachedLimit()\r\n    {\r\n        this.oldReached = (this.messageCharLimit - (this.input.messageLength || 0)) < 100;\r\n        return this.oldReached;\r\n    }\r\n\r\n    configScroll(e)\r\n    {\r\n        if(this.scroll.oldScroll >= 0) e.scrollTop = this.scroll.oldScroll;\r\n        else e.scrollTop = e.scrollHeight + this.scroll.oldScroll - 30;\r\n    }\r\n\r\n    disableAutoScroll(e)\r\n    {\r\n        let el = e.target;\r\n        this.scroll.autoScroll = (el.scrollTop + el.offsetHeight >= el.scrollHeight);\r\n        let currentHeight = el.scrollHeight;\r\n        \r\n        if(this.scroll.autoScroll) this.scroll.needToScroll = false;\r\n        if(this.scroll.needToScroll) this.scrollToBottom();\r\n\r\n        if(el.scrollTop <= 0 && this.scroll.oldScroll > 0 && !this.scroll.loadingFetch && !this.messageEditing) \r\n        {\r\n            this.scroll.loadingFetch = true;\r\n            this.scroll.oldScroll = -currentHeight;\r\n            m.redraw();\r\n\r\n           this.apiFetch(Object.values(this.messages.instances)[0].id);\r\n        }\r\n        else \r\n        {\r\n            m.redraw.strategy('none');\r\n            this.scroll.oldScroll = el.scrollTop;\r\n        }\r\n    }\r\n\r\n    scrollToBottom()\r\n    {\r\n        let chatWrapper = this.getChatWrapper();\r\n        if(chatWrapper)\r\n        {\r\n            if(this.scroll.timeout) clearTimeout(this.scroll.timeout);\r\n            this.scroll.timeout = setTimeout(() => chatWrapper.scroll({top: chatWrapper.scrollHeight, behavior: 'smooth'}), 100);\r\n            if(!this.scroll.autoScroll) this.scroll.needToScroll = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Show the actual Chat Frame.\r\n     *\r\n     * @returns {*}\r\n     */\r\n    view() \r\n    {\r\n        return (\r\n            <div className={'chat left container ' + (this.beingShown ? '' : 'hidden')} style={{'right': this.transform.x + 'px'}}>\r\n                <div tabindex='0' className='frame' id='chat'>\r\n                    <div id='chats-list' className={(this.beingShownChatsList ? 'toggled' : '')}>\r\n                        <div className='header'>\r\n                            <div className='input-wrapper'>\r\n                                <textarea\r\n                                    type = 'text'\r\n                                    id = 'chat-find'\r\n                                    placeholder = {app.translator.trans('pushedx-chat.forum.chat.list.placeholder')}\r\n                                />\r\n                            </div>\r\n                            <p data-title={app.translator.trans('pushedx-chat.forum.chat.list.' + (this.beingShownChatsList ? 'unpin' : 'pin'))}>\r\n                                <div className='icon icon-toggle' onclick={this.toggleChatsList.bind(this)}>\r\n                                    <i className=\"fas fa-paperclip\"></i>\r\n                                </div>\r\n                            </p>\r\n                        </div>\r\n                        <ChatPreview active={true}/>\r\n                        <ChatPreview />\r\n                        <ChatPreview />\r\n                    </div>\r\n\r\n                    <div id='chat-panel'>\r\n                        <div id='chat-header' ondragstart={() => false}>\r\n                            <h2>{app.translator.trans('pushedx-chat.forum.toolbar.title')}</h2>\r\n                            <p data-title={app.translator.trans(this.beingShown ? 'pushedx-chat.forum.toolbar.minimize' : 'pushedx-chat.forum.toolbar.maximize')}>\r\n                                <div className='icon' onclick={this.toggleChat.bind(this)}>\r\n                                    <i className={this.beingShown ? 'fas fa-window-minimize' : 'fas fa-window-maximize'}></i>\r\n                                </div>\r\n                            </p>   \r\n                            <p data-title={app.translator.trans(this.notify ? 'pushedx-chat.forum.toolbar.disable_notifications' : 'pushedx-chat.forum.toolbar.enable_notifications')}>\r\n                                <div className='icon' onclick={this.toggleNotifications.bind(this)}>\r\n                                    <i className={this.notify ? 'fas fa-bell' : 'fas fa-bell-slash'}></i>\r\n                                </div>\r\n                            </p>   \r\n                            <p data-title={app.translator.trans(this.isMuted ? 'pushedx-chat.forum.toolbar.enable_sounds' : 'pushedx-chat.forum.toolbar.disable_sounds')}>\r\n                                <div className='icon' onclick={this.toggleSound.bind(this)}>\r\n                                    <i className={this.isMuted ? 'fas fa-volume-mute' : 'fas fa-volume-up'}></i>\r\n                                </div>\r\n                            </p>\r\n                        </div>\r\n                        <div className='wrapper' \r\n                            config={this.configScroll.bind(this)} \r\n                            onscroll={this.disableAutoScroll.bind(this)}\r\n                            style={{'height': this.transform.y + 'px'}}\r\n                        >\r\n                            {this.scroll.loadingFetch ?\r\n                                <div className='message-wrapper'>\r\n                                    <LoadingIndicator className='loading-old Button-icon' />\r\n                                </div>\r\n                                : null\r\n                            }\r\n                            {this.messages.components.concat(this.input.writing ? this.input.preview.component : null)}\r\n                        </div>\r\n                        <div className='input-wrapper'>\r\n                            <textarea\r\n                                type = 'text'\r\n                                id = 'chat-input'\r\n                                maxlength = {this.messageCharLimit}\r\n                                disabled = {!this.permissions.post}\r\n                                placeholder = {this.input.placeholder}\r\n                                onkeypress = {this.inputPressEnter.bind(this)}\r\n                                oninput = {this.inputProcess.bind(this)}\r\n                                onpaste = {this.inputProcess.bind(this)}\r\n\r\n                                rows = {this.input.rows}\r\n                            />\r\n                            {this.messageEditing ?\r\n                                <div className='icon edit' onclick={this.messageEditEnd.bind(this)}>\r\n                                    <i class=\"fas fa-times\"></i>\r\n                                </div>    \r\n                                : null\r\n                            }\r\n                            <div className='icon send' onclick={this.inputPressButton.bind(this)}>\r\n                                <i class=\"fas fa-angle-double-right\"></i>\r\n                            </div>\r\n                            <div id='chat-limitter' \r\n                                className={this.reachedLimit() ? 'reaching-limit' : ''}\r\n                                style={{display: !this.permissions.post ? 'none' : ''}}\r\n                            >\r\n                                {(this.messageCharLimit - (this.input.messageLength || 0)) + '/' + this.messageCharLimit}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    chatMoveListener(event, e)\r\n    {\r\n        switch(event)\r\n        {\r\n            case 'mousedown':\r\n            {\r\n                if(e.target == this.getChatHeader())\r\n                {\r\n                    if(!this.chatMoveStart(e))\r\n                    {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 'mouseup': \r\n            {\r\n                if(this.chatMoving) this.chatMoveEnd(e);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    chatMoveStart(e)\r\n    {\r\n        this.chatMoving = true;\r\n        this.mouseMoveEvent = this.chatMoveProcess.bind(this);\r\n        this.moveLast = {x: e.clientX, y: e.clientY};\r\n\r\n        document.addEventListener('mousemove', this.mouseMoveEvent);\r\n        document.body.classList.add('moving');\r\n\r\n        return false;\r\n    }\r\n\r\n    chatMoveEnd(e)\r\n    {\r\n        this.chatMoving = false;\r\n        document.removeEventListener('mousemove', this.mouseMoveEvent);\r\n        document.body.classList.remove('moving');\r\n\r\n        localStorage.setItem('chat_transform', JSON.stringify({x: parseInt(this.getChat().style.right) || 0, y: this.getChatWrapper().offsetHeight}));\r\n    }\r\n\r\n    chatMoveProcess(e)\r\n    {\r\n        let chat = this.getChat();\r\n        let chatWrapper = this.getChatWrapper();\r\n\r\n        let move = {x: e.clientX - this.moveLast.x, y: e.clientY - this.moveLast.y}\r\n        let right = parseInt(chat.style.right) || 0;\r\n        let wrapperHeight = chatWrapper.offsetHeight;\r\n        let nextMove = {x: right - move.x, y: wrapperHeight - move.y}; \r\n\r\n        if(0 < nextMove.x && nextMove.x < (window.innerWidth - chat.offsetWidth))\r\n            chat.style.right = nextMove.x + 'px';\r\n\r\n        if(0 < nextMove.y && nextMove.y < (window.innerHeight - 100))\r\n        {\r\n            chatWrapper.style.height = nextMove.y + 'px';\r\n            chatWrapper.scrollTop += move.y;\r\n        }\r\n\r\n        this.moveLast = {x: e.clientX, y: e.clientY};\r\n    }\r\n\r\n    chatOnResize()\r\n    {\r\n        if(this.scroll.autoScroll) \r\n            this.scrollToBottom();\r\n    }\r\n\r\n    inputProcess(e)\r\n    {\r\n        let input = this.getChatInput();\r\n        this.input.messageLength = input.value.length;\r\n\r\n        input.rows = 1;\r\n        let rows = Math.ceil((input.scrollHeight - input.baseScrollHeight) / input.baseHeight) + 1;\r\n        this.input.rows = rows;\r\n        input.rows = rows;\r\n\r\n        console.log(input);\r\n\r\n        if(this.input.messageLength)\r\n        {\r\n            console.log(!this.input.writing);\r\n            if(!this.input.writing && !this.messageEditing)\r\n                this.inputPreviewStart();\r\n        }\r\n        else\r\n        {\r\n            if(this.input.writing && !input.value.length)\r\n                this.inputPreviewEnd();\r\n        }\r\n\r\n        if(this.messageEditing) \r\n        {\r\n            this.messageEditing.textFormatted = input.value;\r\n            this.messageEditing.textFormat(input.value);\r\n        }\r\n        else if(this.input.writing)\r\n        {\r\n            let preview = this.input.preview.instance;\r\n            preview.message = input.value;\r\n            preview.textFormat(input.value);\r\n        }\r\n        this.timedRedraw(100, () => this.scroll.autoScroll && !this.messageEditing ? this.scrollToBottom() : null);\r\n    }\r\n\r\n    inputPressEnter(e)\r\n    {\r\n        if(this.loading) return false;\r\n        if(e.keyCode == 13 && !e.shiftKey)\r\n        {\r\n            this.messageSend(this.getChatInput().value);\r\n            return false;\r\n        }\r\n        else m.redraw.strategy('none');\r\n        return true;\r\n    }\r\n\r\n    inputPressButton() \r\n    {\r\n        this.messageSend(this.getChatInput().value);\r\n    }\r\n\r\n    inputClear()\r\n    {\r\n        this.input.messageLength = 0;\r\n        this.input.rows = 1;\r\n        this.getChatInput().value = '';\r\n    }\r\n\r\n    inputPreviewStart()\r\n    {\r\n        this.input.writing = true;\r\n\r\n        if(!this.input.preview.component) \r\n        {\r\n            this.input.preview.component = this.createMessage(\r\n            {\r\n                id: 0, \r\n                actorId: app.session.user.id(), \r\n                is_editing: true,\r\n                message: ' '\r\n            },\r\n            {\r\n                instanceGetter: (instance) => this.input.preview.instance = instance\r\n            });\r\n        }\r\n        m.redraw();\r\n    }\r\n\r\n    inputPreviewEnd()\r\n    {\r\n        this.input.writing = false;\r\n\r\n        m.redraw();\r\n    }\r\n\r\n    messageSend(text)\r\n    {\r\n        if(text.trim().length > 0 && !this.loading)\r\n        {\r\n            if(this.input.writing) \r\n            {\r\n                this.input.writing = false;\r\n    \r\n                let message = this.input.preview.instance;\r\n                message.created_at = new Date();\r\n                message.is_editing = false;\r\n    \r\n                this.messages.components.push(this.input.preview.component);\r\n                this.input.preview.component = null;\r\n    \r\n                m.redraw();\r\n                message.flash();\r\n            }\r\n\r\n            this.inputClear();\r\n\r\n            let editingMsg = this.messageEditing;\r\n            if(editingMsg)\r\n            {\r\n                if(editingMsg.message.trim() !== editingMsg.textFormatted.trim()) editingMsg.edit(editingMsg.textFormatted);\r\n                this.messageEditEnd();\r\n            }\r\n            else this.apiPost(text);\r\n        }\r\n    }\r\n\r\n    messageEdit(message)\r\n    {\r\n        let chatInput = this.getChatInput();\r\n        this.inputPreviewEnd();\r\n        \r\n        message.is_editing = true;\r\n        message.textFormatted = message.message;\r\n\r\n        this.messageEditing = message;\r\n        chatInput.value = message.message;\r\n        chatInput.focus();\r\n        this.inputProcess();\r\n\r\n        m.redraw();\r\n    }\r\n\r\n    messageEditEnd()\r\n    {\r\n        let message = this.messageEditing;\r\n\r\n        message.is_editing = false;\r\n        this.inputClear();\r\n        message.textFormat();\r\n        m.redraw();\r\n\r\n        this.messageEditing = null;\r\n    }\r\n\r\n    messageDelete(data)\r\n    {\r\n        let message = this.messages.instances[data.id];\r\n        if(message) \r\n        {\r\n            if(this.permissions.moderate.vision) \r\n            {\r\n                message.hide(data.deleted_by);\r\n                m.redraw();\r\n            }\r\n            else message.elementWrapper.style.display = 'none'; \r\n        }\r\n    }\r\n\r\n    messageRestore(data)\r\n    {\r\n        let message = this.messages.instances[data.id];\r\n        if(message) \r\n        {\r\n            message.elementWrapper.style.display = ''; \r\n            message.deleted_by = null;\r\n            m.redraw();\r\n        }\r\n        else\r\n        {\r\n            let messageIds = Object.keys(this.messages.instances);\r\n            messageIds.some((value, index, array) => \r\n            {\r\n                if(array[index - 1] < data.id && data.id < array[index])\r\n                    return this.messages.components.splice(index, 0, this.createMessage(data));\r\n            })\r\n            m.redraw();\r\n        }\r\n    }\r\n\r\n    messageResend(instance)\r\n    {\r\n\t\tthis.apiPost(instance.message, this).then(\r\n\t\t\t(result) =>\r\n\t\t\t{\r\n\t\t\t\tif(result)\r\n\t\t\t\t{\r\n                    this.messages.components.some((value, index, array) => \r\n                    {\r\n                        if(value == instance.component)\r\n                            return array.splice(index, 1) && array.push(instance.component) && this.scrollToBottom();\r\n                    });\r\n                    instance.id = result.data.id;\r\n                    instance.created_at = new Date();\r\n                    instance.timedOut = false;\r\n                    instance.needToFlash = true;\r\n\r\n                    m.redraw();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n    }\r\n\r\n    createMessage(message, options = {}, notify = false) \r\n    {\r\n        let chatMessage = new ChatMessage(\r\n            Object.assign(message, \r\n            {\r\n                actor: message.actorId,\r\n                created_at: message.created_at || new Date(),\r\n                chatFrame: this,\r\n                instanceGetter: (instance) => this.messages.instances[instance.id] = instance,\r\n                userResolved: this.messageUserResolved.bind(this, notify),\r\n            }, options)\r\n        );\r\n        let component = m.component(chatMessage);\r\n        chatMessage.component = component;\r\n        return component;\r\n\r\n        /* Working with lists prepend and flarum's component wrapper is complete anomaly\r\n        If new components are added to the top of the list, new components get incorrect attributes (attrs of already existing components) when they are updated\r\n        \r\n        return (\r\n            <ChatMessage \r\n                id={message.id} \r\n                message={message.message} \r\n                actor={message.actorId} \r\n                created_at={message.created_at} \r\n                chatFrame={this}\r\n                instanceGetter={((instance) => this.messages.instances[instance.id] = instance)}\r\n                userResolved={this.messageUserResolved.bind(this, notify)}\r\n            />\r\n        )\r\n        */\r\n    }\r\n\r\n    messageUserResolved(notify, message)\r\n    {\r\n        if(notify && (!app.session.user || (message.user && message.user.id() != app.session.user.id()))) \r\n            this.notifyTry(message.message, message.user);\r\n\r\n        if(this.scroll.needToScroll || this.scroll.autoScroll)\r\n            this.scrollToBottom();\r\n\r\n        if(notify) message.flash();\r\n    }\r\n\r\n    messageIsMention(msg)\r\n    {\r\n        return app.session.user && (msg.indexOf('@' + app.session.user.username()) >= 0);\r\n    }\r\n\r\n    notifyTry(msg, user) \r\n    {\r\n        if(!(\"Notification\" in window)) return;\r\n        if(this.notify && this.messageIsMention(msg)) this.notifySend(msg, user.username(), user.avatarUrl())\r\n        this.notifySound(msg);\r\n    }\r\n\r\n    notifySend(msg, title, icon)\r\n    {\r\n        return !this.active ? new Notification(title, {body: msg, icon: icon, silent: true}) : null;\r\n    }\r\n\r\n    notifySound(msg) \r\n    {\r\n        if(!this.isMuted) \r\n        {\r\n            let sound = this.messageIsMention(msg) ? refAudio : audio;\r\n            sound.currentTime = 0;\r\n            sound.play();\r\n        }\r\n    }\r\n\r\n    apiPost(text, targetInstance = this.input.preview.instance)\r\n    {\r\n        this.loading = true;\r\n        this.scroll.needToScroll = true;\r\n\r\n        return app.request({\r\n            method: 'POST',\r\n            url: app.forum.attribute('apiUrl') + '/chat',\r\n            data: {msg: text}\r\n        }).then(\r\n            (result) =>\r\n            {\r\n                targetInstance.id = result.data.id;\r\n\r\n                this.messages.instances[targetInstance.id] = targetInstance;\r\n                if(targetInstance == this.input.preview.instance) this.input.preview.instance = null;\r\n            \r\n                this.loading = false;\r\n                m.redraw();\r\n\r\n                return result;\r\n            },\r\n            (error) =>\r\n            {\r\n                targetInstance.timedOut = true;\r\n                if(targetInstance == this.input.preview.instance) this.input.preview.instance = null;\r\n\r\n                this.loading = false;\r\n                m.redraw();\r\n            }\r\n        );\r\n    }\r\n\r\n    apiFetch(lastMessageId = 0)\r\n    {\r\n        let self = this;\r\n\r\n        app.request({\r\n            method: 'GET',\r\n            url: app.forum.attribute('apiUrl') + '/chat/' + lastMessageId\r\n        }).then(\r\n            function(response)\r\n            {\r\n                self.scroll.loadingFetch = false;\r\n                self.scroll.autoScroll = false;\r\n\r\n                let fetchedMessages = response.data.map((data) => self.createMessage(data.attributes));\r\n                self.messages.components = fetchedMessages.concat(self.messages.components);\r\n\r\n                m.redraw();\r\n            },\r\n            function()\r\n            {\r\n                self.scroll.loadingFetch = false;\r\n                m.redraw();\r\n            }\r\n        );\r\n    }\r\n\r\n\ttimedRedraw(timeout, callback)\r\n\t{\r\n\t\tm.redraw.strategy('none');\r\n\t\t\r\n        if(!this.redrawTimeout)\r\n        {\r\n\t\t    this.redrawTimeout = setTimeout(() => {\r\n                m.redraw();\r\n                callback();\r\n                this.redrawTimeout = null;\r\n            }, timeout);\r\n        }\r\n\t}\r\n\r\n    onunload()\r\n    {\r\n        // onunload() is calling each route change but chat is not redrawn (beacuse of 'diff' redraw strategy, check index.js) and init() is not called too. Bug?\r\n        // this.pusherDetach(this.pusherChannel)\r\n    }\r\n}","import Component from 'flarum/Component';\r\nimport avatar from 'flarum/helpers/avatar';\r\nimport username from 'flarum/helpers/username';\r\nimport fullTime from 'flarum/helpers/fullTime';\r\nimport humanTime from 'flarum/utils/humanTime';\r\nimport LoadingIndicator from 'flarum/components/LoadingIndicator';\r\nimport extractText from 'flarum/utils/extractText';\r\n\r\nimport DropDown from 'flarum/components/Dropdown';\r\nimport Button from 'flarum/components/Button';\r\nimport Separator from 'flarum/components/Separator';\r\n\r\nexport default class ChatMessage extends Component\r\n{\r\n\tinit()\r\n\t{\r\n\t\tthis.inited = false;\r\n\t\tthis.labels = [];\r\n\t\tObject.assign(this, this.props);\r\n\r\n\t\tthis.user = app.store.getById('users', this.actor);\r\n        if(this.user == undefined)\r\n        {\r\n\t\t\tapp.store.find('chat/user', this.actor).then((user) =>\r\n\t\t\t{\r\n\t\t\t\tif(user.data.id != '') this.user = user;\r\n\t\t\t\tthis.initEvents();\r\n\t\t\t});\r\n\t\t}\r\n\t\telse this.initEvents();\r\n\r\n\t\tif(this.deleted_by) this.hide(this.deleted_by);\r\n\t\t\r\n\t\tthis.textFormat();\r\n\t\tthis.instanceGetter(this);\r\n\t}\r\n\r\n\tinitEvents()\r\n\t{\r\n\t\tthis.inited = true;\r\n\r\n\t\tthis.userResolved(this);\r\n\t\tthis.initLabels();\r\n\r\n\t\tm.redraw();\r\n\t}\r\n\r\n\tview()\r\n\t{\r\n\t\treturn (\r\n\t\t\t<div \r\n\t\t\t\tclassName={[\r\n\t\t\t\t\t'message-wrapper', \r\n\t\t\t\t\tthis.deleted_by ? 'deleted' : '',\r\n\t\t\t\t\tthis.is_editing ? 'editing' : ''\r\n\t\t\t\t].join(' ')}\r\n\t\t\t\tdata-id={this.id} \r\n\t\t\t\tconfig={this.configWrapper.bind(this)}>\r\n\t\t\t\t{this.inited ?\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{this.user ? \r\n\t\t\t\t\t\t\t<a className='avatar-wrapper' href={app.route.user(this.user)} config={m.route}>\r\n\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t{avatar(this.user, {className: 'avatar'})}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t<div className='avatar-wrapper'>\r\n\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t{avatar(this.user, {className: 'avatar'})}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t<div className='message-block'>\r\n\t\t\t\t\t\t\t<div className='toolbar'>\r\n\t\t\t\t\t\t\t\t<a className='name' onclick={this.chatFrame.insertMention.bind(this.chatFrame, this)}>\r\n\t\t\t\t\t\t\t\t\t{username(this.user).children[0] + ': '}\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t{this.id ?\r\n\t\t\t\t\t\t\t\t\t<div style='display: inline'>\r\n\t\t\t\t\t\t\t\t\t\t<a className='timestamp' title={fullTime(this.created_at).children[0]}>{this.humanTime = humanTime(this.created_at)}</a>\r\n\t\t\t\t\t\t\t\t\t\t<div className='labels'>\r\n\t\t\t\t\t\t\t\t\t\t\t{this.labels.map(label => label.condition() ? label.component() : null)}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t{this.deleted_forever ? null : this.editDropDown()}\r\n\t\t\t\t\t\t\t\t\t</div> : (this.timedOut ? \r\n\t\t\t\t\t\t\t\t\t<div style='display: inline'>\t\r\n\t\t\t\t\t\t\t\t\t\t<div className='labels'>\r\n\t\t\t\t\t\t\t\t\t\t\t{this.labels.map(label => label.condition() ? label.component() : null)}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t{this.editDropDownTimedOut()}\r\n\t\t\t\t\t\t\t\t\t</div> : null)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='message'>\r\n\t\t\t\t\t\t\t\t{this.censored ?\r\n\t\t\t\t\t\t\t\t\t<div className='censored' title={app.translator.trans('pushedx-chat.forum.chat.message.censored')}>\r\n\t\t\t\t\t\t\t\t\t\t{this.message}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t<div config={this.configFormat.bind(this)}>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t: <LoadingIndicator className='loading-old Button-icon' />\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\tinitLabels()\r\n\t{\r\n\t\tthis.labelBind(\r\n\t\t\t() => this.edited_at, \r\n\t\t\t() => (\r\n\t\t\t\t<div class='icon' title={extractText(app.translator.trans(\r\n\t\t\t\t\t'core.forum.post.edited_tooltip',\r\n\t\t\t\t\t{user: this.user, ago: humanTime(this.edited_at)}\r\n\t\t\t\t))}>\r\n\t\t\t\t\t<i class=\"fas fa-pencil-alt\"></i>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tthis.labelBind(\r\n\t\t\t() => this.deleted_by, \r\n\t\t\t() => (\r\n\t\t\t\t<div class='icon'>\r\n\t\t\t\t\t<i class=\"fas fa-trash-alt\"></i> <span>{'(' + app.translator.trans('pushedx-chat.forum.chat.message.deleted' + (this.deleted_forever ? '_forever' : ''))} {this.user_deleted_by ? (username(this.user_deleted_by).children[0]  + ')') : null}</span>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tthis.labelBind(\r\n\t\t\t() => this.timedOut, \r\n\t\t\t() => (\r\n\t\t\t\t<div class='icon' style='color: #ff4063'>\r\n\t\t\t\t\t<i class=\"fas fa-exclamation-circle\"></i>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\tlabelBind(condition, component)\r\n\t{\r\n\t\tthis.labels.push({condition: condition, component: component})\r\n\t}\r\n\r\n\teditDropDown()\r\n\t{\r\n\t\treturn (\r\n\t\t\t<div className='edit'>\r\n\t\t\t\t<DropDown \r\n\t\t\t\t\tbuttonClassName=\"Button Button--icon Button--flat\"\r\n\t\t\t\t\tmenuClassName=\"Dropdown-menu--top Dropdown-menu--bottom Dropdown-menu--left Dropdown-menu--right\"\r\n\t\t\t\t\ticon=\"fas fa-ellipsis-h\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{this.user && this.user == app.session.user ?\r\n\t\t\t\t\t\t[<Button \r\n\t\t\t\t\t\t\tonclick={this.chatFrame.messageEdit.bind(this.chatFrame, this)} \r\n\t\t\t\t\t\t\ticon='fas fa-pencil-alt'\r\n\t\t\t\t\t\t\tdisabled={this.deleted_by || this.chatFrame.messageEditing || !this.chatFrame.permissions.edit}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{app.translator.trans('core.forum.post_controls.edit_button')}\r\n\t\t\t\t\t\t</Button>, <Separator />] : <div></div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{this.deleted_by ?\r\n\t\t\t\t\t\t[<Button \r\n\t\t\t\t\t\t\tonclick={this.restore.bind(this)} \r\n\t\t\t\t\t\t\ticon='fas fa-reply'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{app.translator.trans('core.forum.post_controls.restore_button')}\r\n\t\t\t\t\t\t</Button>, <Separator />] : <div></div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{!this.deleted_by && this.chatFrame.permissions.delete ?\r\n\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\tonclick={this.delete.bind(this)} \r\n\t\t\t\t\t\t\ticon='fas fa-trash-alt'\r\n\t\t\t\t\t\t\tdisabled={!this.chatFrame.permissions.delete}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{app.translator.trans('core.forum.post_controls.delete_button')}\r\n\t\t\t\t\t\t</Button> : <div></div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{this.deleted_by && this.chatFrame.permissions.moderate.delete ?\r\n\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\tonclick={this.delete.bind(this, true)} \r\n\t\t\t\t\t\t\ticon='fas fa-trash-alt'\r\n\t\t\t\t\t\t\tdisabled={!this.chatFrame.permissions.delete}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{app.translator.trans('core.forum.post_controls.delete_forever_button')}\r\n\t\t\t\t\t\t</Button> : <div></div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</DropDown>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\t\r\n\teditDropDownTimedOut()\r\n\t{\r\n\t\treturn (\r\n\t\t\t<div className='edit'>\r\n\t\t\t\t<DropDown \r\n\t\t\t\t\tbuttonClassName=\"Button Button--icon Button--flat\"\r\n\t\t\t\t\tmenuClassName=\"Dropdown-menu--top Dropdown-menu--bottom Dropdown-menu--left Dropdown-menu--right\"\r\n\t\t\t\t\ticon=\"fas fa-ellipsis-h\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<Button \r\n\t\t\t\t\t\tonclick={this.delete.bind(this)} \r\n\t\t\t\t\t\ticon='fas fa-trash-alt'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{app.translator.trans('pushedx-chat.forum.chat.message.actions.hide')}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button \r\n\t\t\t\t\t\tonclick={this.chatFrame.messageResend.bind(this.chatFrame, this)}\r\n\t\t\t\t\t\ticon='fas fa-reply'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{app.translator.trans('pushedx-chat.forum.chat.message.actions.resend')}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</DropDown>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\tconfigWrapper(element)\r\n\t{\r\n\t\tthis.elementWrapper = element;\r\n\r\n\t\tif(this.needToFlash) \r\n\t\t{\r\n\t\t\tthis.flash();\r\n\t\t\tthis.needToFlash = false;\r\n\t\t}\r\n\t}\r\n\r\n\tconfigFormat(element, isInitialized)\r\n\t{\r\n\t\tif(element.chatMessage == this.message) return;\r\n\r\n\t\telement.chatMessage = this.message;\r\n\t\tthis.element = element;\r\n\t\tthis.textFormat();\r\n\r\n\t\tif(this.chatFrame.chatOnResize) this.chatFrame.chatOnResize();\r\n\t}\r\n\r\n\ttextFormat(text)\r\n\t{\r\n\t\tif(!text) text = this.message;\r\n\t\tif(this.element) s9e.TextFormatter.preview(text, this.element);\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\t$('.chat script').each(function() {\r\n\t\t\t\teval.call(window, $(this).text());\r\n\t\t\t});\r\n\t\t}, 1000);\r\n\t}\r\n\r\n\tdelete(e, forever)\r\n\t{\r\n\t\tthis.deleted_by = app.session.user.id();\r\n\t\tif(forever) \r\n\t\t{\r\n\t\t\tthis.deleted_forever = forever;\r\n\t\t\tthis.elementWrapper.style.display = 'none';\r\n\t\t\tthis.apiDelete(forever);\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tthis.apiEdit({hide: true});\r\n\t\t\tthis.hide(this.deleted_by);\r\n\t\t}\r\n\t}\r\n\r\n\thide(deleted_by)\r\n\t{\r\n\t\tthis.deleted_by = deleted_by;\r\n\t\tif(this.deleted_by == app.session.user.id()) this.user_deleted_by = app.session.user;\r\n\t\telse\r\n\t\t{\r\n\t\t\tthis.user_deleted_by = app.store.getById('users', this.deleted_by);\r\n\t\t\tif(this.user_deleted_by == undefined)\r\n\t\t\t{\r\n\t\t\t\tapp.store.find('chat/user', this.deleted_by).then((user) =>\r\n\t\t\t\t{\r\n\t\t\t\t\tif(user.data.id != '') \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.user_deleted_by = user;\r\n\t\t\t\t\t\tm.redraw();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tm.redraw();\r\n\t}\r\n\r\n\trestore()\r\n\t{\r\n\t\tthis.deleted_by = null;\r\n\t\tthis.apiEdit({hide: false});\r\n\t}\r\n\r\n\tedit(newContent, outside = false)\r\n\t{\r\n\t\tthis.edited_at = new Date();\r\n\t\tthis.message = newContent;\r\n\t\tthis.needToFlash = true;\r\n\r\n\t\tthis.textFormat();\r\n\r\n\t\tif(!outside) this.apiEdit({msg: newContent});\r\n\r\n\t\tm.redraw();\r\n\t}\r\n\r\n    apiEdit(attributes)\r\n    {\r\n        app.request({\r\n            method: 'PATCH',\r\n            url: app.forum.attribute('apiUrl') + '/chat/' + this.id,\r\n            data: {attributes: attributes}\r\n        })\r\n\t}\r\n\t\r\n\tapiDelete()\r\n\t{\r\n        app.request({\r\n            method: 'DELETE',\r\n            url: app.forum.attribute('apiUrl') + '/chat/' + this.id\r\n        })\r\n\t}\r\n\r\n\tflash()\r\n\t{\r\n\t\tif(!this.elementWrapper) this.needToFlash = true;\r\n\t\telse this.flashItem($(this.elementWrapper));\r\n\t}\r\n\r\n\t/**\r\n\t * https://github.com/flarum/core/blob/7e74f5a03c7f206014f3f091968625fc0bf29094/js/src/forum/components/PostStream.js#L579\r\n\t * \r\n\t * 'Flash' the given post, drawing the user's attention to it.\r\n\t *\r\n\t * @param {jQuery} $item\r\n\t */\r\n\tflashItem($item) {\r\n\t\t$item.addClass('flash').one('animationend webkitAnimationEnd', () => $item.removeClass('flash'));\r\n\t}\r\n}","import Component from 'flarum/Component';\r\nimport avatar from 'flarum/helpers/avatar';\r\nimport username from 'flarum/helpers/username';\r\nimport fullTime from 'flarum/helpers/fullTime';\r\nimport humanTime from 'flarum/utils/humanTime';\r\nimport LoadingIndicator from 'flarum/components/LoadingIndicator';\r\nimport extractText from 'flarum/utils/extractText';\r\n\r\nimport DropDown from 'flarum/components/Dropdown';\r\nimport Button from 'flarum/components/Button';\r\nimport Separator from 'flarum/components/Separator';\r\n\r\nexport default class ChatPreview extends Component\r\n{\r\n\tinit()\r\n\t{\r\n\t\tObject.assign(this, this.props);\r\n\t}\r\n\r\n\tview()\r\n\t{\r\n\t\treturn <div className={'panel-preview ' + (this.active ? 'active' : '')}></div>\r\n\t}\r\n}","import {extend} from 'flarum/extend';\r\nimport HeaderPrimary from 'flarum/components/HeaderPrimary';\r\nimport ChatFrame from './components/ChatFrame';\r\n\r\napp.initializers.add('pushedx-chat', app =>\r\n{\r\n    extend(HeaderPrimary.prototype, 'items', function(items) \r\n    {\r\n        m.redraw.strategy('diff');\r\n        items.add('pushedx-chat-frame', <ChatFrame />);\r\n    });\r\n});\r\n","module.exports = flarum.core.compat['Component'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['components/Dropdown'];","module.exports = flarum.core.compat['components/HeaderPrimary'];","module.exports = flarum.core.compat['components/LoadingIndicator'];","module.exports = flarum.core.compat['components/Separator'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['helpers/avatar'];","module.exports = flarum.core.compat['helpers/fullTime'];","module.exports = flarum.core.compat['helpers/username'];","module.exports = flarum.core.compat['utils/extractText'];","module.exports = flarum.core.compat['utils/humanTime'];"],"sourceRoot":""}